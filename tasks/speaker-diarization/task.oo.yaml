inputs_def:
  - handle: audio_file
    description: "%input-audio-file-for-speaker-diarization%"
    json_schema:
      type: string
      ui:
        widget: file
        options:
          filters:
            - name: Audio Files
              extensions:
                - wav
                - mp3
                - flac
                - m4a
    nullable: false

  - handle: num_speakers
    description: "%pre-specified-number-of-speakers-optional-leave-empty-for-automa%"
    json_schema:
      type: number
    value: null
    nullable: true

  - handle: include_overlap
    description: "%enable-overlap-detection-for-overlapping-speech-segments%"
    json_schema:
      type: boolean
    value: false
    nullable: false

  - handle: output_format
    description: "%output-format-for-diarization-results%"
    json_schema:
      type: string
      enum:
        - json
        - rttm
    value: "json"
    nullable: false

outputs_def:
  - handle: segments
    description: "Speaker segments with timestamps and speaker IDs"
    json_schema:
      type: array
      items:
        type: object
        properties:
          start_time:
            type: number
          end_time:
            type: number
          speaker_id:
            type: string

  - handle: output_file
    description: "Path to the saved diarization output file"
    json_schema:
      type: string

executor:
  name: python
  options:
    entry: __init__.py
    spawn: false

title: "%speaker-diarization2%"
icon: ":carbon:user-speaker:"
description: "%this-block-performs-speaker-diarization-on-audio-files-identifyi%"
